version: '3.8'

services:
  # PHP-FPM Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pw_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel
    depends_on:
      - db
      - redis

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: pw_webserver
    restart: unless-stopped
    ports:
      - "8001:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel
    depends_on:
      - app

  # MySQL Database Service
  db:
    image: mysql:8.0
    container_name: pw_db
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: pw_db
      MYSQL_ROOT_PASSWORD: pw_db_root_pswd
      MYSQL_USER: pw_db_user
      MYSQL_PASSWORD: pw_db_pswd
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - laravel

  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: pw_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  # Node.js Service for asset compilation
  node:
    image: node:18-alpine
    container_name: pw_node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - laravel
    command: sh -c "npm install && npm run dev"
    profiles:
      - node

  # Composer Service
  composer:
    image: composer:latest
    container_name: pw_composer
    volumes:
      - ./:/app
    working_dir: /app
    networks:
      - laravel
    profiles:
      - composer

  # Artisan Service
  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pw_artisan
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel
    profiles:
      - artisan

# Docker Networks
networks:
  laravel:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
